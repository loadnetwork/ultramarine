name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, ready_for_review]
  merge_group:

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ============================================================================
  # Unified CI Check (uses Makefile)
  # ============================================================================
  ci:
    name: CI
    runs-on: ubuntu-latest
    timeout-minutes: 30
    # Run on pushes OR on non-draft PRs
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.draft == false }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Active toolchain for the job â†’ 1.88 (clippy/rustfmt/llvm-tools)
      - name: Setup Rust (1.88 + components)
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.88
          components: rustfmt, clippy, llvm-tools-preview

      # Install nightly rustfmt WITHOUT changing the override (Makefile uses `+nightly fmt`)
      - name: Install nightly rustfmt (for fmt-check)
        run: |
          rustup toolchain install nightly --profile=minimal
          rustup component add --toolchain nightly rustfmt

      - name: Cache cargo/target
        uses: Swatinem/rust-cache@v2

      - name: Install development tools
        run: make ci-tools

      # Needed by `make sort-check`
      - name: Install cargo-sort
        run: cargo install cargo-sort --locked

      - name: Run CI checks
        run: make ci
        env:
          RUSTFLAGS: "-D warnings"

  # ============================================================================
  # Coverage (uses Makefile)
  # ============================================================================
  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 45
    # Run on pushes to main OR PRs explicitly asking for coverage in the title
    if: ${{ github.ref == 'refs/heads/main' || (github.event_name == 'pull_request' && contains(github.event.pull_request.title, '[coverage]')) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Rust (1.88 + components)
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.88
          components: rustfmt, clippy, llvm-tools-preview

      - name: Cache cargo/target
        uses: Swatinem/rust-cache@v2

      - name: Install development tools
        run: make ci-tools

      - name: Generate coverage report
        run: make cov-report-html

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: lcov.info
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload HTML coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/llvm-cov/html/
          retention-days: 30

  # ============================================================================
  # Docs (build & upload)
  # ============================================================================
  docs:
    name: Docs
    runs-on: ubuntu-latest
    timeout-minutes: 20
    # Run on pushes OR on non-draft PRs
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.draft == false }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Rust (1.88)
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.88

      - name: Cache cargo/target
        uses: Swatinem/rust-cache@v2

      - name: Install development tools
        run: make ci-tools

      - name: Build docs (public API)
        run: make doc
        env:
          RUSTDOCFLAGS: "-D warnings"

      - name: Upload docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: rust-docs
          path: target/doc
          retention-days: 7
