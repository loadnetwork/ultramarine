name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, ready_for_review]
  merge_group:

env:
  CARGO_TERM_COLOR: always

# Principle of least privilege
permissions:
  contents: read

# Cancel in-progress runs for the same PR/branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ============================================================================
  # Unified CI Check (uses Makefile)
  # ============================================================================
  ci:
    name: CI
    runs-on: ubuntu-latest
    timeout-minutes: 10
    # Run on pushes OR on non-draft PRs
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.draft == false }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Rust (1.88 + components)
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.88
          components: rustfmt, clippy, llvm-tools-preview

      - name: Cache cargo/target
        uses: Swatinem/rust-cache@v2

      - name: Install development tools
        run: make ci-tools

      - name: Run CI checks
        run: make ci
        env:
          RUSTFLAGS: "-D warnings"

  # ============================================================================
  # Coverage (uses Makefile)
  # ============================================================================
  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 10
    # Run on pushes to main OR PRs explicitly asking for coverage in the title
    if: ${{ github.ref == 'refs/heads/main' || (github.event_name == 'pull_request' && contains(github.event.pull_request.title, '[coverage]')) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Rust (1.88 + components)
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.88
          components: rustfmt, clippy, llvm-tools-preview

      - name: Cache cargo/target
        uses: Swatinem/rust-cache@v2

      - name: Install development tools
        run: make ci-tools

      - name: Generate coverage report
        run: make cov-report-html
