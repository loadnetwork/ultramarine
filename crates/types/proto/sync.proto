
syntax = "proto3";

import "consensus.proto";

package test;

message PeerId {
    bytes id = 1;
}

message Status {
    PeerId peer_id = 1;
    uint64 height = 2;
    uint64 earliest_height = 3;
}

message ValueRequest {
    uint64 height = 1;
}

message ValueResponse {
    uint64 height = 1;
    SyncedValue value = 2;
}

message SyncedValue {
    bytes value_bytes = 1;
    CommitCertificate certificate = 2;
}

message CommitSignature {
    // TODO: Add flag (no vote, nil, value?)
    Address validator_address = 1;
    Signature signature = 2;
}

message AggregatedSignature {
    repeated CommitSignature signatures = 1;
}

message CommitCertificate {
    uint64 height = 1;
    uint32 round = 2;
    ValueId value_id = 3;
    AggregatedSignature aggregated_signature = 4;
}

message ProposedValue {
    uint64 height = 1;
    uint32 round = 2;
    optional uint32 valid_round = 3;
    Address proposer = 4;
    Value value = 5;
    bool validity = 6;
}

message VoteSetRequest {
  uint64 height = 1;
  uint32 round = 2;
}

message VoteSetResponse {
  uint64 height = 1;
  uint32 round = 2;
  VoteSet vote_set = 3;
}

message VoteSet {
  repeated SignedMessage signed_votes = 1;
}

message SyncRequest {
  oneof request {
    ValueRequest value_request = 1;
    VoteSetRequest vote_set_request = 2;
  }
}

message SyncResponse {
  oneof response {
    ValueResponse value_response = 1;
    VoteSetResponse vote_set_response = 2;
  }
}
